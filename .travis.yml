# After changing this file, check it on:
#   http://lint.travis-ci.org/

os:         linux
dist:       xenial
sudo:       false
language:   python

python:
    - 3.5
    - 3.6

matrix:
    include:
        - name: "Python 3.6 on OSX"
          os: osx
          osx_image: xcode9.2
          language: generic
          python:   3.6
          env:      WANTED_PYTHON_VERSION=3.6

addons:
    apt:
        packages:
            - python-pip
        sources:
            - ubuntu-toolchain-r-test

before_install:
    - |
        if [ $TRAVIS_OS_NAME == "osx" ]; then
            brew update                                                         # this swaps python versions and makes 3 the default one

            if [ "$WANTED_PYTHON_VERSION" == "2.7" ]; then
                brew reinstall python\@2 || brew link --overwrite python\@2     # install and link python2 and pip2 to /usr/local/bin
                export PATH=/usr/local/opt/python\@2/bin:$PATH
                export PYTHON_EXE=python
            else
                brew unlink python
                brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/f2a764ef944b1080be64bd88dca9a1d80130c558/Formula/python.rb --ignore-dependencies
                brew switch python 3.6.5_1
                export PATH=/usr/local/opt/python/bin:$PATH
                export PYTHON_EXE=python3
            fi

            export CK_PLATFORM_NAME="generic-macos "                            # used later by CK
        else
            export WANTED_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION                 # since Python is supported in Linux, get it from Travis
            export PYTHON_EXE=python
            export CK_PLATFORM_NAME="generic-linux "                            # used later by CK (note the trailing space to make the choice unique)
        fi

install:
    - CWD=`pwd`
    - THIS_REPO_NAME=`basename $CWD`
    - echo "TRAVIS_OS_NAME=${TRAVIS_OS_NAME}, WANTED_PYTHON_VERSION=${WANTED_PYTHON_VERSION}"
    - echo "CWD=${CWD}, THIS_REPO_NAME=${THIS_REPO_NAME}, PATH=${PATH}"
    - which "${PYTHON_EXE}"
    - ${PYTHON_EXE} --version
    - rm -f `which pip`                                                             # the file is removable, but not writeable
    - ${PYTHON_EXE} -m pip install --ignore-installed --verbose pip setuptools      # make sure pip is also up to date no matter what
    - ${PYTHON_EXE} -m pip install -r requirements.txt                              # ck kernel itself and some essential components
    - ck pull repo:${THIS_REPO_NAME}                                                # ...also trigger pulling dependent repositories
    - echo "$CK_PLATFORM_NAME" | ck detect platform.os --update_platform_init       # set the platform to generic-linux (1) or generic-macos (2)
    - ck detect soft:compiler.python --full_path=`which ${PYTHON_EXE}`              # pick the one Travis has set for us in the PATH
    - ck install package --tags=lib,python-package,numpy                            # avoid detection by force-installing the package
    - ck install package --tags=lib,python-package,scipy --force_version=1.2.1      # later versions no longer recognize pillow
    - ck install package --tags=lib,python-package,pillow                           # avoid detection by force-installing the package
    - ck install package:lib-tensorflow-1.13.1-cpu                                  # avoid manual selection
    - ck install package:imagenet-2012-val-min                                      # avoid manual selection
    - ck install package --tags=dataset,imagenet,preprocessed,first.20              # we only need a short preprocessed subset
    - ck install package --tags=model,image-classification,onnx,mobilenet,nchw,downloaded   # MobileNet ONNX model, downloaded
    - ck install package --tags=model,image-classification,onnx,mobilenet,nhwc,converted    # MobileNet ONNX model, converted from TF, in NHWC
    - ck install package --tags=model,image-classification,onnx,resnet,nchw,converted       # ResNet50 ONNX model, converted from TF, in NCHW
    - ck install package --tags=model,image-classification,onnx,resnet,nhwc,converted       # ResNet50 ONNX model, converted from TF, in NHWC

script:
    - ck show env                                                                   # show everything that has been detected or installed
    - ck run program:image-classification-onnx-py --dep_add_tags.weights=mobilenet,converted --cmd_key=barebones --env.CK_BATCH_SIZE=3      # internal preprocessing
    - ck run program:image-classification-onnx-py --dep_add_tags.weights=mobilenet,downloaded --cmd_key=preprocessed --env.CK_BATCH_COUNT=2 # external preprocessing
    - ck run program:image-classification-onnx-py --dep_add_tags.weights=resnet,nchw,converted --cmd_key=preprocessed                       # channels-first layout
    - ck run program:image-classification-onnx-py --dep_add_tags.weights=resnet,nhwc,converted --cmd_key=preprocessed                       # channels-last layout
    - ck run program:image-classification-onnx-py --cmd_key=preprocessed --dep_add_tags.weights=resnet,nchw,converted --env.CK_IMAGE_FILE=ILSVRC2012_val_00000003.JPEG  # classify specific file

